package warstwa_Controller.Strona_User;

import DataBase_AutoGenerated.Atrybuty;
import DataBase_AutoGenerated.Produkty;
import warstwa_Model.Strona_User.OfertaDAO;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;


@ManagedBean
@SessionScoped
public class Oferta {

    private static String rodzaj_kategorii; // NIE USUWAC STATIC BO WYBUCHNIE O_O ! ! !
    private String wyszukaj;
    private List<Produkty> produktyList;
    private List<Atrybuty> atrybutyList;
    private String img_path;
    private static int id = 1; // NIE USUWAC STATIC BO WYBUCHNIE O_O ! ! !


    @EJB
    private OfertaDAO ofertaDAO;


    /**
     * Metoda inicjująca i aktualizująca wszelkie zmiany związane z wyświetlaniem kolejnych produktów
     */
    @PostConstruct
    public void init() {
        produktyList = ofertaDAO.listOfProcessorProduct(id);
        atrybutyList = ofertaDAO.listOfProcessorAtributes(id);
        img_path = ofertaDAO.getImgPath(id);
    }

    /**
     * Metoda odpowiedzialna za wyświetlanie kolejnych produktów z oferty
     */
    public void nextI(){

        if( ofertaDAO.getSizeOfProducts() == id ) {
            id = ofertaDAO.goBackToStart(rodzaj_kategorii);

        }
        id++;
        if(!ofertaDAO.checkWhenYouShouldToLoop(id).equals(rodzaj_kategorii))
        {
            id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        }

        produktyList = ofertaDAO.listOfProcessorProduct(id);
        atrybutyList = ofertaDAO.listOfProcessorAtributes(id);
        img_path = ofertaDAO.getImgPath(id);
    }
    /** Test */ public String nextI___TEST(int nr_instrukcji_warunkowej, int getSizeOfProducts, String checkWhenYouShouldToLoop, String rodzaj_kategorii){
        if(nr_instrukcji_warunkowej == 1)
        {
            if(getSizeOfProducts == id ) {
                return "zabezpieczenie nr 1 zadzialalo i nastapilo zapetlenie";
            }
        }
        if(nr_instrukcji_warunkowej == 2)
        {
            if(!checkWhenYouShouldToLoop.equals(rodzaj_kategorii))
            {
                return "zabezpieczenie nr 2 zadzialalo i nastapilo zapetlenie";
            }
        }
        return "kolejny produkt zostal wyswietlony bez koniecznosci zapetlania";
    }

    /**
     * Metoda przenosząca nas do wybranego produktu w ofercie sklepowej
     * @param somewhere
     * @param rodzaj_kategorii
     * @param rodzaj_katalogu
     */
    public void redirectToSomewhere(String somewhere, String rodzaj_kategorii, String rodzaj_katalogu){
            this.rodzaj_kategorii = rodzaj_kategorii;
            FacesContext context = FacesContext.getCurrentInstance();
            try {
                context.getExternalContext().redirect("/faces/ofertaSklepu/" + rodzaj_katalogu + "/" + somewhere + ".xhtml");
            } catch (IOException e) {
                e.printStackTrace();
            }
            init();
    }
    /** Test */ public String redirectToSomewhere___TEST(String somewhere, String rodzaj_katalogu){
        return ("/faces/ofertaSklepu/" + rodzaj_katalogu + "/" + somewhere + ".xhtml");
    } /** Test */

    /**
     * Metoda odpowiedzialna za wyszukiwanie produktów na stronie
     */
    public void search(){
        for(int j = 1; j < ofertaDAO.getSizeOfProducts() ; j++)
        {
            if(ofertaDAO.findByName(j).equals("[" + wyszukaj + "]"))
            {
                id=j;
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Procesory"))
                    redirectToSomewhere("Procesory", "Procesory","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("KartyGraficzne"))
                    redirectToSomewhere("Karty_Graficzne", "KartyGraficzne","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("PlytyGlowne"))
                    redirectToSomewhere("Plyty_Glowne", "PlytyGlowne","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Zasilacze"))
                    redirectToSomewhere("Zasilacze", "Zasilacze","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("PamieciRAM"))
                    redirectToSomewhere("Pamieci_RAM", "PamieciRAM","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("ObudowyKomputerowe"))
                    redirectToSomewhere("Obudowy_Komputerowe", "ObudowyKomputerowe","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("ChlodzeniaProcesora"))
                    redirectToSomewhere("Chlodzenia_Procesora", "Chlodzenia_Procesora","podzespolyKomputerowe");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("DyskiTwarde"))
                    redirectToSomewhere("Dyski_Twarde", "DyskiTwarde","podzespolyKomputerowe");

                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Laptopy"))
                    redirectToSomewhere("Laptopy", "Laptopy","laptopy");

                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Antywirusy"))
                    redirectToSomewhere("Antywirusy", "Antywirusy","oprogramowanie");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("ProgramyBiurowe"))
                    redirectToSomewhere("Programy_Biurowe", "ProgramyBiurowe","oprogramowanie");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("SystemyOperacyjne"))
                    redirectToSomewhere("Systemy_Operacyjne", "SystemyOperacyjne","oprogramowanie");

                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Drukarki"))
                    redirectToSomewhere("Drukarki", "Drukarki","urzadzeniaPeryferyjne");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Klawiatury"))
                    redirectToSomewhere("Klawiatury", "Klawiatury","urzadzeniaPeryferyjne");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Monitory"))
                    redirectToSomewhere("Monitory", "Monitory","urzadzeniaPeryferyjne");
                if(ofertaDAO.checkWhenYouShouldToLoop(id).equals("Myszki"))
                    redirectToSomewhere("Myszki", "Myszki","urzadzeniaPeryferyjne");
            }
        }
    }
    /** Test */ public Boolean search___TEST(){
        List list = new ArrayList();
        list.add(0, "procesor");
        list.add(1, "zasilacz");
        list.add(2, "monitor");
        for(int j = 0; j < 3 ; j++)
        {
            if(list.get(j).equals(wyszukaj))
                return true;
            else
                return false;
        }
        return null;
    } /** Test */

    /**
     * Metody odpowiedzialne za zmianę kategorii produktów przeglądanych przez użytkownika, oraz odesłanie go na odpowiednią formatkę
     */
    /**************************************************************************************************************************************/
    public void procesory(){
        rodzaj_kategorii = "Procesory";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Procesory.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String procesory___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void karty_graficzne(){
        rodzaj_kategorii = "KartyGraficzne";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Karty_Graficzne.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String karty_graficzne___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void plyty_glowne(){
        rodzaj_kategorii = "PlytyGlowne";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Plyty_Glowne.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String plyty_glowne___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void zasilacze(){
        rodzaj_kategorii = "Zasilacze";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Zasilacze.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String zasilacze___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void pamieci_ram(){
        rodzaj_kategorii = "PamieciRAM";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Pamieci_RAM.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String pamieci_ram___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void obudowy_komputerowe(){
        rodzaj_kategorii = "ObudowyKomputerowe";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Obudowy_Komputerowe.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String obudowy_komputerowe___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void chlodzenia_procesora(){
        rodzaj_kategorii = "ChlodzeniaProcesora";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Chlodzenia_Procesora.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String chlodzenia_procesora___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void dyski_twarde(){
        rodzaj_kategorii = "DyskiTwarde";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/podzespolyKomputerowe/Dyski_Twarde.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String dyski_twarde___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void laptopy(){
        rodzaj_kategorii = "Laptopy";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/laptopy/Laptopy.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String laptopy___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void antywirusy(){
        rodzaj_kategorii = "Antywirusy";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/oprogramowanie/Antywirusy.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String antywirusy___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void programy_biurowe(){
        rodzaj_kategorii = "ProgramyBiurowe";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/oprogramowanie/Programy_Biurowe.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String programy_biurowe___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void systemy_operacyjne(){
        rodzaj_kategorii = "SystemyOperacyjne";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/oprogramowanie/Systemy_Operacyjne.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String systemy_operacyjne___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void drukarki(){
        rodzaj_kategorii = "Drukarki";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/urzadzeniaPeryferyjne/Drukarki.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String drukarki___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void klawiatury(){
        rodzaj_kategorii = "Klawiatury";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/urzadzeniaPeryferyjne/Klawiatury.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String klawiatury___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void myszki(){
        rodzaj_kategorii = "Myszki";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/urzadzeniaPeryferyjne/Myszki.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String myszki___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }

    public void monitory(){
        rodzaj_kategorii = "Monitory";
        FacesContext context = FacesContext.getCurrentInstance();
        try {
            context.getExternalContext().redirect("/faces/ofertaSklepu/urzadzeniaPeryferyjne/Monitory.xhtml");
        } catch (IOException e) {
            e.printStackTrace();
        }
        id = ofertaDAO.goBackToStart(rodzaj_kategorii);
        init();
    }
    /** Test */ public String monitory___TEST(String redirect, String rodzaj_kategorii){
        return redirect = "/faces/ofertaSklepu/podzespolyKomputerowe/"+rodzaj_kategorii+".xhtml";
    }
    /**************************************************************************************************************************************/

    /**
     * Gettery i Settery
     * @return
     */
    /*************************/
    public List takeListOfProducts(){
        return ofertaDAO.getNamesOfProducts();
    }

    public List<Produkty> getProduktyList() {
        return produktyList;
    }

    public List<Atrybuty> getAtrybutyList() {
        return atrybutyList;
    }

    public String getImg_path() {
        return img_path;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getWyszukaj() {
        return wyszukaj;
    }

    public void setWyszukaj(String wyszukaj) {
        this.wyszukaj = wyszukaj;
    }
    /*************************/
}