package warstwa_Model.general;

import DataBase_AutoGenerated.Klient;
import DataBase_AutoGenerated.KoszykZamowienie;
import DataBase_AutoGenerated.Osoba;
import DataBase_AutoGenerated.UserGroups;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import static java.lang.Integer.parseInt;

@Stateless
@LocalBean
public class RegisterDAO {  // DAO --- Database Operation


    @PersistenceContext
    private EntityManager entityManager;


    /**
     * Dodaje nową osobę
     * @param id
     * @param login
     * @param haslo
     * @param email
     * @param imie
     * @param nazwisko
     */
    public void dodaj__OSOBE(int id, String login, String haslo, String email, String imie, String nazwisko){
        Osoba osoba = new Osoba();
        osoba.setIdOsoba(id);
        osoba.setLogin(login);
        osoba.setHaslo(haslo);
        osoba.setEmail(email);
        osoba.setImie(imie);
        osoba.setNazwisko(nazwisko);
        entityManager.persist(osoba);
    }

    /**
     * Przypisuje uprawnienia do użytkownika
     * @param id
     */
    public void dodaj__USER_GROUPS(int id){
        UserGroups userGroups = new UserGroups();
        userGroups.setIdOsoba(id);
        userGroups.setGroupId(1);
        entityManager.persist(userGroups);
    }

    /**
     * Dodaje nowego klienta
     * @param idKlienta
     * @param id
     */
    public void dodaj__KLIENTA(int idKlienta, int id){
        Klient klient = new Klient();
        klient.setIdKlient(idKlienta);
        klient.setOsobaIdOsoba(id);
        entityManager.persist(klient);
    }

    /**
     * Dodaje nowy koszyk
     * @param idKoszyka
     * @param idKlienta
     */
    public void dodaj__KOSZYK_ZAMOWIENIE(int idKoszyka,int idKlienta){
        KoszykZamowienie koszykZamowienie = new KoszykZamowienie();
        koszykZamowienie.setIdKoszyk(idKoszyka);
        koszykZamowienie.setIdKlientFk(idKlienta);
        entityManager.persist(koszykZamowienie);
    }

    /**
     * Zwraca ilość osób
     * @return
     */
    public int getSizeOfOsoby(){
        return parseInt(String.valueOf(entityManager.createNativeQuery("SELECT MAX(idOsoba) FROM osoba").getResultList()).replace("[", "").replace("]", ""));
    }
    /**
     * Zwraca ilość klientów
     * @return
     */
    public int getSizeOfKlienci(){
         return parseInt(String.valueOf(entityManager.createNativeQuery("SELECT MAX(idKlient) FROM klient").getResultList()).replace("[", "").replace("]", ""));
    }

    /**
     * Zwraca wielkość koszyka
     * @return
     */
    public int getSizeOfKoszyk_Zamowienia(){
        return parseInt(String.valueOf(entityManager.createNativeQuery("SELECT MAX(idKoszyk) FROM koszyk_zamowienie").getResultList()).replace("[", "").replace("]", ""));
    }

}
