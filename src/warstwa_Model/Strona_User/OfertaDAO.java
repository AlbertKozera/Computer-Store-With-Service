package warstwa_Model.Strona_User;


import DataBase_AutoGenerated.Atrybuty;
import DataBase_AutoGenerated.Produkty;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import java.util.List;

@Stateless
@LocalBean
public class OfertaDAO {


    @PersistenceContext
    private EntityManager entityManager;


    /**
     * Zwraca ścieżkę do obrazka
     * @param id_atrybutu
     * @return
     */
    public String getImgPath(int id_atrybutu){
        Query query = entityManager.createNativeQuery("SELECT a.img_path FROM atrybuty a WHERE a.idAtrybuty =" + id_atrybutu);
        List list = query.getResultList();
        return String.valueOf(list).replace("[","").replace("]","");
    }

    /**
     * Zwraca ilość produktów
     * @return
     */
    public int getSizeOfProducts(){
        Query query = entityManager.createNativeQuery("SELECT p.idProdukty FROM Produkty p");
        List list = query.getResultList();
        return list.size();
    }

    /**
     * Zwraca nazwe produktu pod numerem id ktory wskazuje iterator
     * @param id_produktu
     * @return
     */
    public String findByName(int id_produktu){
        Query query = entityManager.createNativeQuery("SELECT p.Nazwa FROM Produkty p WHERE p.idProdukty =" + id_produktu);
        List list = query.getResultList();
        return String.valueOf(list);
    }

    /**
     * Zwraca kategorie pod numerem id ktory wskazuje iterator w celu pozniejszego zapętlania produktow
     * @param id_produktu
     * @return
     */
    public String checkWhenYouShouldToLoop(int id_produktu){
        Query query = entityManager.createNativeQuery("SELECT p.Kategoria FROM Produkty p WHERE p.idProdukty =" + id_produktu);
        List list = query.getResultList();
        return String.valueOf(list).replace("[","").replace("]","");
    }

    /**
     * Zapętla przechodzenie po produktach
     * @param kategoria
     * @return
     */
    public int goBackToStart(String kategoria){
        Query query = entityManager.createNativeQuery("SELECT MIN(p.idProdukty) FROM produkty p WHERE p.Kategoria ='" + kategoria + "'");
        List list = query.getResultList();
        return (Integer)list.stream().findFirst().orElse(0);
    }

    /**
     * Zwraca nazwy wszystkich produktów
     * @return
     */
    public List getNamesOfProducts() {
        return entityManager.createQuery("SELECT p.nazwa FROM Produkty p").getResultList();
    }

    /**
     * Zwraca listę produktów
     * @param i
     * @return
     */
    public List<Produkty> listOfProcessorProduct(int i) {
        return entityManager.createQuery("SELECT p FROM Produkty p WHERE p.idProdukty =" + i, Produkty.class).getResultList();
    }

    /**
     * Zwraca listę atrybutów
     * @param i
     * @return
     */
    public List<Atrybuty> listOfProcessorAtributes(int i) {
        return entityManager.createQuery("SELECT a FROM Atrybuty a WHERE a.idAtrybuty ="+ i, Atrybuty.class).getResultList();
    }

}
